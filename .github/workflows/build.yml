name: build

on:
  push:
    paths-ignore:
      - "docs/**"
    branches:
      - master
  pull_request:
    paths-ignore:
      - "docs/**"
    branches:
      - "**"

jobs:
  build:
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        poetry-version: [1.0.10]
        cache-buster: [0]
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    steps:
      # Check out the code.
      - uses: actions/checkout@v2

      # Set up the target Python version.
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # Set up Poetry.
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Configure poetry
        shell: bash
        run: poetry config virtualenvs.in-project true

      # Set up the cache.
      - name: Get full Python version
        id: full-python-version
        shell: bash
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: .venv
          key: venv-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}-${{ matrix.cache-buster }}
      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        shell: bash
        run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv

      # Install and configure our dependencies.
      - name: Upgrade pip
        shell: bash
        run: poetry run python -m pip install --upgrade pip
      - name: Install dependencies
        shell: bash
        run: poetry install

      # Run the test suite.
      - name: Run pytest
        shell: bash
        run: poetry run python -m pytest -v tests/

      # Report metrics to codecov.
      - name: Report code coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: true
