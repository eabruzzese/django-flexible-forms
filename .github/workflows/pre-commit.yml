name: pre-commit

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  pre-commit:
    env:
      PYTHON_VERSION: 3.9
      POETRY_VERSION: 1.1.6
      CACHE_BUSTER: 0
    runs-on: ubuntu-latest
    steps:
      # Check out the code.
      - uses: actions/checkout@v2

      # Set up Python.
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: "${{ env.PYTHON_VERSION }}"

      # Set up Poetry.
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Configure poetry
        shell: bash
        run: poetry config virtualenvs.in-project true

      # Set up the cache.
      - name: Get full Python version
        id: full-python-version
        shell: bash
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: .venv
          key: venv-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}-${{ env.CACHE_BUSTER }}
      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        shell: bash
        run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv

      # Install and configure our dependencies.
      - name: Upgrade pip
        shell: bash
        run: poetry run python -m pip install --upgrade pip
      - name: Install dependencies
        shell: bash
        run: poetry install

      # Run the pre-commit hooks.
      - name: Run pre-commit
        uses: pre-commit/action@v2.0.0
        env:
          SKIP: no-commit-to-branch
